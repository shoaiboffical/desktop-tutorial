{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\fiverr-clone\\\\client\\\\src\\\\pages\\\\orders\\\\Orders.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './orders.scss';\nimport { useQuery } from \"@tanstack/react-query\";\nimport newRequest from \"../../utils/newRequest\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Orders = () => {\n  _s();\n  const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n  const navigate = useNavigate();\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: ['orders'],\n    queryFn: () => newRequest.get(`/orders`).then(res => {\n      return res.data;\n    })\n  });\n  const handleContact = async order => {\n    const sellerId = order.sellerId;\n    const buyerId = order.buyerId;\n    const id = sellerId + buyerId;\n    try {\n      const res = await newRequest.get(`/conversations/single/${id}`);\n      navigate(`/message/${res.data.id}`);\n    } catch (error) {\n      // console.log(error);\n      if (error.response.status === 404) {\n        const res = await newRequest.post(`/conversations`, {\n          to: currentUser.isSeller ? buyerId : sellerId\n        });\n        navigate(`/message/${res.data.id}`);\n      }\n    }\n  };\n  console.log(data);\n  return [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders\",\n    children: isLoading ? \"loading\" : error ? \"something went wrongs\" : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contact-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), data.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: data.img,\n              alt: \"\",\n              className: \"img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"message\",\n              src: \"/images/message.png\",\n              alt: \"\",\n              onClick: () => handleContact(order)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 72\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this)];\n};\n_s(Orders, \"1liW9YuJ25SNGBOr5PzKxESTfrk=\", false, function () {\n  return [useNavigate, useQuery];\n});\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useQuery","newRequest","useNavigate","jsxDEV","_jsxDEV","Orders","_s","currentUser","JSON","parse","localStorage","getItem","navigate","isLoading","error","data","queryKey","queryFn","get","then","res","handleContact","order","sellerId","buyerId","id","response","status","post","to","isSeller","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","img","alt","title","price","onClick","_id","_c","$RefreshReg$"],"sources":["C:/project/fiverr-clone/client/src/pages/orders/Orders.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './orders.scss';\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport newRequest from \"../../utils/newRequest\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Orders = () => {\r\n    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const navigate = useNavigate();\r\n    const { isLoading, error, data } = useQuery({\r\n        queryKey: ['orders'],\r\n        queryFn: () =>\r\n            newRequest.get(`/orders`)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n    });\r\n\r\n    const handleContact = async (order) => {\r\n        const sellerId = order.sellerId;\r\n        const buyerId = order.buyerId;\r\n        const id = sellerId + buyerId;\r\n        try {\r\n            const res = await newRequest.get(`/conversations/single/${id}`);\r\n            navigate(`/message/${res.data.id}`)\r\n\r\n        } catch (error) {\r\n            // console.log(error);\r\n            if (error.response.status===404) {\r\n                const res = await newRequest.post(`/conversations`, { to: currentUser.isSeller ? buyerId : sellerId });\r\n                navigate(`/message/${res.data.id}`)\r\n            }\r\n        }\r\n    }\r\n    console.log(data);\r\n    return ([\r\n        <div className=\"orders\">\r\n            {isLoading ? \"loading\" : error ? \"something went wrongs\" : <div className=\"container\">\r\n                <div className=\"title\">\r\n                    <h1>Orders</h1>\r\n                </div>\r\n                <table>\r\n                    <tr>\r\n                        <th>Image</th>\r\n                        <th>Title</th>\r\n                        <th>Price</th>\r\n                        <th>Contact-</th>\r\n                    </tr>\r\n                    {data.map((order) => (\r\n                        <tr key={order._id}>\r\n                            <td>\r\n                                <img src={data.img} alt=\"\" className=\"img\" />\r\n                            </td>\r\n                            <td>{order.title}</td>\r\n                            <td>{order.price}</td>\r\n                            <td>\r\n                                <img className=\"message\" src=\"/images/message.png\" alt=\"\" onClick={() => handleContact(order)} />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </table>\r\n            </div>}\r\n        </div>\r\n    ]);\r\n}\r\nexport default Orders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}