{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\fiverr-clone\\\\client\\\\src\\\\pages\\\\success\\\\Success.jsx\",\n  _s = $RefreshSig$();\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import './success.scss'\n// import { useEffect } from 'react';\n// import newRequest from '../../utils/newRequest';\n// const Success = () => {\n//     const { search } = useLocation();\n//     const navigate = useNavigate();\n//     const params = new URLSearchParams(search);\n//     const payment_intent = params.get('payment_intent');\n//     useEffect(() => {\n//         const makeRequest = async () => {\n//             try {\n//                 await newRequest.put('/Orders', { payment_intent });\n//                 setTimeout(() => {\n//                     navigate(\"Orders\");\n//                 }, 5000);\n//             } catch (error) {\n//                 console.log(error);\n//             }\n//         }\n//         makeRequest();\n//     }, []);\n//     return (\n//        [  <div className=\"cm\">\n//       <img src=\"images/successfully-done.gif\" alt=\"\" />\n//        </div>,\n//        <div className='success'>\n//             payment successfulYou are being redirected to the order page.<br></br>\n//         </div>,\n//          <span className='close'>please do not close page</span>]\n//     );\n// }\n// export default Success;\nimport React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport newRequest from '../../utils/newRequest'; // Assuming this is your configured Axios instance or similar\nimport './success.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Success = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const params = new URLSearchParams(location.search);\n  const paymentIntent = params.get('payment_intent');\n  const gigId = params.get('gig_id'); // Assuming you pass gigId as a query parameter\n\n  useEffect(() => {\n    const createOrder = async () => {\n      if (!paymentIntent || !gigId) {\n        console.error('Payment intent or Gig ID is missing');\n        navigate('/error'); // Redirect to an error page or handle this scenario appropriately\n        return;\n      }\n      try {\n        // POST request to create an order on the backend\n        const response = await newRequest.post('/api/intent', {\n          ethTransactionId: paymentIntent,\n          id: gigId // Ensure you have the correct field name expected by the backend\n        });\n        const data = await response.data;\n\n        // Navigate to the order details page with the newly created order ID\n        navigate(`/orders/${data.order._id}`);\n      } catch (error) {\n        console.error('Failed to create order:', error);\n        navigate('/error'); // Handle errors appropriately\n      }\n    };\n    createOrder();\n  }, [navigate, paymentIntent, gigId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"success-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Processing your order...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"images/loading.gif\",\n      alt: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please do not close this page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Success, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Success;\nexport default Success;\nvar _c;\n$RefreshReg$(_c, \"Success\");","map":{"version":3,"names":["React","useEffect","useLocation","useNavigate","newRequest","jsxDEV","_jsxDEV","Success","_s","location","navigate","params","URLSearchParams","search","paymentIntent","get","gigId","createOrder","console","error","response","post","ethTransactionId","id","data","order","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/project/fiverr-clone/client/src/pages/success/Success.jsx"],"sourcesContent":["// import { useLocation, useNavigate } from 'react-router-dom';\r\n// import './success.scss'\r\n// import { useEffect } from 'react';\r\n// import newRequest from '../../utils/newRequest';\r\n// const Success = () => {\r\n//     const { search } = useLocation();\r\n//     const navigate = useNavigate();\r\n//     const params = new URLSearchParams(search);\r\n//     const payment_intent = params.get('payment_intent');\r\n//     useEffect(() => {\r\n//         const makeRequest = async () => {\r\n//             try {\r\n//                 await newRequest.put('/Orders', { payment_intent });\r\n//                 setTimeout(() => {\r\n//                     navigate(\"Orders\");\r\n//                 }, 5000);\r\n//             } catch (error) {\r\n//                 console.log(error);\r\n//             }\r\n//         }\r\n//         makeRequest();\r\n//     }, []);\r\n//     return (\r\n//        [  <div className=\"cm\">\r\n//       <img src=\"images/successfully-done.gif\" alt=\"\" />\r\n//        </div>,\r\n//        <div className='success'>\r\n//             payment successfulYou are being redirected to the order page.<br></br>\r\n//         </div>,\r\n//          <span className='close'>please do not close page</span>]\r\n//     );\r\n// }\r\n// export default Success;\r\nimport React, { useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport newRequest from '../../utils/newRequest';  // Assuming this is your configured Axios instance or similar\r\nimport './success.scss';\r\n\r\nconst Success = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const params = new URLSearchParams(location.search);\r\n  const paymentIntent = params.get('payment_intent');\r\n  const gigId = params.get('gig_id');  // Assuming you pass gigId as a query parameter\r\n\r\n  useEffect(() => {\r\n    const createOrder = async () => {\r\n      if (!paymentIntent || !gigId) {\r\n        console.error('Payment intent or Gig ID is missing');\r\n        navigate('/error');  // Redirect to an error page or handle this scenario appropriately\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // POST request to create an order on the backend\r\n        const response = await newRequest.post('/api/intent', {\r\n          ethTransactionId: paymentIntent,\r\n          id: gigId  // Ensure you have the correct field name expected by the backend\r\n        });\r\n        const data = await response.data;\r\n\r\n        // Navigate to the order details page with the newly created order ID\r\n        navigate(`/orders/${data.order._id}`);\r\n      } catch (error) {\r\n        console.error('Failed to create order:', error);\r\n        navigate('/error');  // Handle errors appropriately\r\n      }\r\n    };\r\n\r\n    createOrder();\r\n  }, [navigate, paymentIntent, gigId]);\r\n\r\n  return (\r\n    <div className=\"success-page\">\r\n      <h1>Processing your order...</h1>\r\n      <img src=\"images/loading.gif\" alt=\"Loading\" />\r\n      <p>Please do not close this page.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,UAAU,MAAM,wBAAwB,CAAC,CAAE;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,MAAM,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC;EACnD,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAG,CAAC,gBAAgB,CAAC;EAClD,MAAMC,KAAK,GAAGL,MAAM,CAACI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAE;;EAErCd,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACH,aAAa,IAAI,CAACE,KAAK,EAAE;QAC5BE,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;QACpDT,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;QACrB;MACF;MAEA,IAAI;QACF;QACA,MAAMU,QAAQ,GAAG,MAAMhB,UAAU,CAACiB,IAAI,CAAC,aAAa,EAAE;UACpDC,gBAAgB,EAAER,aAAa;UAC/BS,EAAE,EAAEP,KAAK,CAAE;QACb,CAAC,CAAC;QACF,MAAMQ,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI;;QAEhC;QACAd,QAAQ,CAAE,WAAUc,IAAI,CAACC,KAAK,CAACC,GAAI,EAAC,CAAC;MACvC,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CT,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;MACvB;IACF,CAAC;IAEDO,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACP,QAAQ,EAAEI,aAAa,EAAEE,KAAK,CAAC,CAAC;EAEpC,oBACEV,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BtB,OAAA;MAAAsB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC1B,OAAA;MAAK2B,GAAG,EAAC,oBAAoB;MAACC,GAAG,EAAC;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9C1B,OAAA;MAAAsB,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAAAxB,EAAA,CAzCKD,OAAO;EAAA,QACML,WAAW,EACXC,WAAW;AAAA;AAAAgC,EAAA,GAFxB5B,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}