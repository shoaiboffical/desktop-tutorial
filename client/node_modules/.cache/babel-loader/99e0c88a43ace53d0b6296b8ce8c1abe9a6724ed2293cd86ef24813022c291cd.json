{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\fiverr-clone\\\\client\\\\src\\\\pages\\\\orders\\\\Orders.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import './orders.scss';\n// import { useQuery } from \"@tanstack/react-query\";\n// import newRequest from \"../../utils/newRequest\";\n// import { useNavigate } from \"react-router-dom\";\n// const Orders = () => {\n//     const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n//     const navigate = useNavigate();\n//     const { isLoading, error, data } = useQuery({\n//         queryKey: ['orders'],\n//         queryFn: () =>\n//             newRequest.get(`/orders`)\n//                 .then((res) => {\n//                     return res.data;\n//                 })\n//     });\n\n//     const handleContact = async (order) => {\n//         const sellerId = order.sellerId;\n//         const buyerId = order.buyerId;\n//         const id = sellerId + buyerId;\n//         try {\n//             const res = await newRequest.get(`/conversations/single/${id}`);\n//             navigate(`/message/${res.data.id}`)\n\n//         } catch (error) {\n//             // console.log(error);\n//             if (error.response.status===404) {\n//                 const res = await newRequest.post(`/conversations`, { to: currentUser.isSeller ? buyerId : sellerId });\n//                 navigate(`/message/${res.data.id}`)\n//             }\n//         }\n//     }\n//     console.log(data);\n//     return ([\n//         <div className=\"orders\">\n//             {isLoading ? \"loading\" : error ? \"something went wrong\" : <div className=\"container\">\n//                 <div className=\"title\">\n//                     <h1>Orders</h1>\n//                 </div>\n//                 <table>\n//                     <tr>\n//                         <th>Image</th>\n//                         <th>Title</th>\n//                         <th>Price</th>\n//                         <th>Contact</th>\n//                     </tr>\n//                     {data.map((order) => (\n//                         <tr key={order._id}>\n//                             <td>\n//                                 <img src={data.img} alt=\"\" className=\"img\" />\n//                             </td>\n//                             <td>{order.title}</td>\n//                             <td>{order.price}</td>\n//                             <td>\n//                                 <img className=\"message\" src=\"/images/message.png\" alt=\"\" onClick={() => handleContact(order)} />\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </table>\n//             </div>}\n//         </div>\n//     ]);\n// }\n// export default Orders;\n\nimport React from \"react\";\nimport './orders.scss';\nimport { useQuery } from \"@tanstack/react-query\";\nimport newRequest from \"../../utils/newRequest\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Orders = () => {\n  _s();\n  const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n  const navigate = useNavigate();\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: ['orders'],\n    queryFn: () => newRequest.get(`/orders`, {\n      params: {\n        role: currentUser.isSeller ? 'seller' : 'buyer'\n      }\n    }).then(res => {\n      return res.data;\n    })\n  });\n  const handleContact = async order => {\n    const sellerId = order.sellerId;\n    const buyerId = order.buyerId;\n    const id = sellerId + buyerId;\n    try {\n      const res = await newRequest.get(`/conversations/single/${id}`);\n      navigate(`/message/${res.data.id}`);\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        const res = await newRequest.post(`/conversations`, {\n          to: currentUser.isSeller ? buyerId : sellerId\n        });\n        navigate(`/message/${res.data.id}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders\",\n    children: isLoading ? \"loading\" : error ? `Error: ${error.message}` : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data && data.length > 0 ? data.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: order.img,\n                alt: \"\",\n                className: \"img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"message\",\n                src: \"/images/message.png\",\n                alt: \"\",\n                onClick: () => handleContact(order)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"4\",\n              children: \"No orders found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 74\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(Orders, \"1liW9YuJ25SNGBOr5PzKxESTfrk=\", false, function () {\n  return [useNavigate, useQuery];\n});\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useQuery","newRequest","useNavigate","jsxDEV","_jsxDEV","Orders","_s","currentUser","JSON","parse","localStorage","getItem","navigate","isLoading","error","data","queryKey","queryFn","get","params","role","isSeller","then","res","handleContact","order","sellerId","buyerId","id","response","status","post","to","className","children","message","fileName","_jsxFileName","lineNumber","columnNumber","length","map","src","img","alt","title","price","onClick","_id","colSpan","_c","$RefreshReg$"],"sources":["C:/project/fiverr-clone/client/src/pages/orders/Orders.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import './orders.scss';\r\n// import { useQuery } from \"@tanstack/react-query\";\r\n// import newRequest from \"../../utils/newRequest\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// const Orders = () => {\r\n//     const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n//     const navigate = useNavigate();\r\n//     const { isLoading, error, data } = useQuery({\r\n//         queryKey: ['orders'],\r\n//         queryFn: () =>\r\n//             newRequest.get(`/orders`)\r\n//                 .then((res) => {\r\n//                     return res.data;\r\n//                 })\r\n//     });\r\n\r\n//     const handleContact = async (order) => {\r\n//         const sellerId = order.sellerId;\r\n//         const buyerId = order.buyerId;\r\n//         const id = sellerId + buyerId;\r\n//         try {\r\n//             const res = await newRequest.get(`/conversations/single/${id}`);\r\n//             navigate(`/message/${res.data.id}`)\r\n\r\n//         } catch (error) {\r\n//             // console.log(error);\r\n//             if (error.response.status===404) {\r\n//                 const res = await newRequest.post(`/conversations`, { to: currentUser.isSeller ? buyerId : sellerId });\r\n//                 navigate(`/message/${res.data.id}`)\r\n//             }\r\n//         }\r\n//     }\r\n//     console.log(data);\r\n//     return ([\r\n//         <div className=\"orders\">\r\n//             {isLoading ? \"loading\" : error ? \"something went wrong\" : <div className=\"container\">\r\n//                 <div className=\"title\">\r\n//                     <h1>Orders</h1>\r\n//                 </div>\r\n//                 <table>\r\n//                     <tr>\r\n//                         <th>Image</th>\r\n//                         <th>Title</th>\r\n//                         <th>Price</th>\r\n//                         <th>Contact</th>\r\n//                     </tr>\r\n//                     {data.map((order) => (\r\n//                         <tr key={order._id}>\r\n//                             <td>\r\n//                                 <img src={data.img} alt=\"\" className=\"img\" />\r\n//                             </td>\r\n//                             <td>{order.title}</td>\r\n//                             <td>{order.price}</td>\r\n//                             <td>\r\n//                                 <img className=\"message\" src=\"/images/message.png\" alt=\"\" onClick={() => handleContact(order)} />\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </table>\r\n//             </div>}\r\n//         </div>\r\n//     ]);\r\n// }\r\n// export default Orders;\r\n\r\n\r\nimport React from \"react\";\r\nimport './orders.scss';\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport newRequest from \"../../utils/newRequest\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Orders = () => {\r\n    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const navigate = useNavigate();\r\n\r\n    const { isLoading, error, data } = useQuery({\r\n        queryKey: ['orders'],\r\n        queryFn: () =>\r\n            newRequest.get(`/orders`, { params: { role: currentUser.isSeller ? 'seller' : 'buyer' } })\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n    });\r\n\r\n    const handleContact = async (order) => {\r\n        const sellerId = order.sellerId;\r\n        const buyerId = order.buyerId;\r\n        const id = sellerId + buyerId;\r\n        try {\r\n            const res = await newRequest.get(`/conversations/single/${id}`);\r\n            navigate(`/message/${res.data.id}`);\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 404) {\r\n                const res = await newRequest.post(`/conversations`, { to: currentUser.isSeller ? buyerId : sellerId });\r\n                navigate(`/message/${res.data.id}`);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"orders\">\r\n            {isLoading ? \"loading\" : error ? `Error: ${error.message}` : <div className=\"container\">\r\n                <div className=\"title\">\r\n                    <h1>Orders</h1>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Image</th>\r\n                            <th>Title</th>\r\n                            <th>Price</th>\r\n                            <th>Contact</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data && data.length > 0 ? data.map((order) => (\r\n                            <tr key={order._id}>\r\n                                <td>\r\n                                    <img src={order.img} alt=\"\" className=\"img\" />\r\n                                </td>\r\n                                <td>{order.title}</td>\r\n                                <td>{order.price}</td>\r\n                                <td>\r\n                                    <img className=\"message\" src=\"/images/message.png\" alt=\"\" onClick={() => handleContact(order)} />\r\n                                </td>\r\n                            </tr>\r\n                        )) : <tr><td colSpan=\"4\">No orders found</td></tr>}\r\n                    </tbody>\r\n                </table>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Orders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}